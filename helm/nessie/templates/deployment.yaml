{{/**

  Copyright (C) 2024 Dremio

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

**/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nessie.fullname" . }}
  labels:
    {{- include "nessie.labels" . | nindent 4 }}
    {{- if .Values.podLabels }}
    {{- tpl (toYaml .Values.podLabels) . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nessie.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        projectnessie.org/config-checksum: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- if .Values.podAnnotations }}
        {{- tpl (toYaml .Values.podAnnotations) . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nessie.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- tpl (toYaml .Values.podLabels) . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- tpl (toYaml .Values.imagePullSecrets) . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nessie.serviceAccountName" . }}
      securityContext:
        {{- tpl (toYaml .Values.podSecurityContext) . | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- tpl (toYaml .Values.securityContext) . | nindent 12 }}
          image: "{{ tpl .Values.image.repository . }}:{{ tpl .Values.image.tag . | default .Chart.Version }}"
          imagePullPolicy: {{ tpl .Values.image.pullPolicy . }}
          volumeMounts:
            - name: nessie-config
              mountPath: {{ trimSuffix "/" .Values.image.configDir }}/application.properties
              subPath: application.properties
          {{- if or (eq .Values.versionStoreType "ROCKSDB") (eq .Values.versionStoreType "ROCKS") }}
            - name: rocks-storage
              mountPath: /rocks-nessie
          {{- end }}
          {{- if and (eq .Values.versionStoreType "BIGTABLE") (.Values.bigtable.secret) }}
            - name: bigtable-creds
              mountPath: /bigtable-nessie
          {{- end }}
          env:
            {{- if or (eq .Values.versionStoreType "DYNAMODB") (eq .Values.versionStoreType "DYNAMO") -}}
            {{- include "nessie.secretToEnv" (list .Values.dynamodb.secret "awsAccessKeyId" "AWS_ACCESS_KEY_ID" . ) | trim | nindent 12 -}}
            {{- include "nessie.secretToEnv" (list .Values.dynamodb.secret "awsSecretAccessKey" "AWS_SECRET_ACCESS_KEY" . ) | trim | nindent 12 -}}
            {{- end -}}
            {{- if or (eq .Values.versionStoreType "MONGODB") (eq .Values.versionStoreType "MONGO") }}
            {{- include "nessie.secretToEnv" (list .Values.mongodb.secret "username" "quarkus.mongodb.credentials.username" . ) | trim | nindent 12 -}}
            {{- include "nessie.secretToEnv" (list .Values.mongodb.secret "password" "quarkus.mongodb.credentials.password" . ) | trim | nindent 12 -}}
            {{- end -}}
            {{- if eq .Values.versionStoreType "CASSANDRA" }}
            {{- include "nessie.secretToEnv" (list .Values.cassandra.secret "username" "quarkus.cassandra.auth.username" . ) | trim | nindent 12 -}}
            {{- include "nessie.secretToEnv" (list .Values.cassandra.secret "password" "quarkus.cassandra.auth.password" . ) | trim | nindent 12 -}}
            {{- end -}}
            {{- if or (eq .Values.versionStoreType "JDBC") (eq .Values.versionStoreType "TRANSACTIONAL") }}
            {{- $oldConfig := .Values.postgres | default dict }}
            {{- $newConfig := .Values.jdbc | default dict }}
            {{- $jdbcUrl := coalesce $oldConfig.jdbcUrl $newConfig.jdbcUrl }}
            {{- $secret := coalesce $oldConfig.secret $newConfig.secret }}
            {{- $dbKind := include "nessie.dbKind" $jdbcUrl }}
            {{- include "nessie.secretToEnv" (list $secret "username" (printf "quarkus.datasource.%s.username" $dbKind) . ) | trim | nindent 12 }}
            {{- include "nessie.secretToEnv" (list $secret "password" (printf "quarkus.datasource.%s.password" $dbKind) . ) | trim | nindent 12 }}
            {{- end -}}
            {{- if eq .Values.versionStoreType "BIGTABLE" }}
            {{- if .Values.bigtable.secret }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /bigtable-nessie/sa_credentials.json
            {{- end }}
            {{- end -}}
            {{- if .Values.authentication.enabled -}}
            {{- include "nessie.secretToEnv" (list .Values.authentication.oidcClientSecret "key" "quarkus.oidc.credentials.secret" . ) | trim | nindent 12 -}}
            {{- include "nessie.secretToEnv" (list .Values.authentication.oidcClientSecret "key" "quarkus.oidc.ui-app.credentials.secret" . ) | trim | nindent 12 -}}
            {{- end -}}
            {{- if .Values.catalog.enabled -}}
            {{- include "nessie.catalogStorageEnv" . | trim | nindent 12 -}}
            {{- end -}}
            {{- if .Values.extraEnv }}
            {{- tpl (toYaml .Values.extraEnv) . | nindent 12 }}
            {{- end }}
          ports:
            {{- range $portName, $portNumber := .Values.service.ports }}
            - name: {{ $portName }}
              containerPort: {{ $portNumber }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: "nessie-mgmt"
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            terminationGracePeriodSeconds: {{ .Values.livenessProbe.terminationGracePeriodSeconds }}
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: "nessie-mgmt"
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}

          resources:
            {{- tpl (toYaml .Values.resources) . | nindent 12 }}
      volumes:
        - name: nessie-config
          configMap:
            name: {{ include "nessie.fullname" . }}
      {{- if or (eq .Values.versionStoreType "ROCKSDB") (eq .Values.versionStoreType "ROCKS") }}
        - name: rocks-storage
          persistentVolumeClaim:
            claimName: {{ include "nessie.fullname" . }}
      {{- end }}
      {{- if and (eq .Values.versionStoreType "BIGTABLE") (.Values.bigtable.secret) }}
        - name: bigtable-creds
          secret:
            secretName: {{ .Values.bigtable.secret.name }}
            items:
              - key: {{ .Values.bigtable.secret.key }}
                path: sa_credentials.json
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- tpl (toYaml .Values.nodeSelector) . | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- tpl (toYaml .Values.affinity) . | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- tpl (toYaml .Values.tolerations) . | nindent 8 }}
      {{- end }}
