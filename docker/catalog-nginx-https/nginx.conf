events {
  worker_connections 1024;
}

http {
  # Redirect non-HTTPS to HTTPS
  server {
    listen 8080;
    server_name nessie-nginx.localhost.localdomain;
    return 301 https://$host$request_uri;
  }

  server {
    listen 8443 ssl;
    server_name nessie-nginx.localhost.localdomain;

    ssl_certificate /etc/nginx/certs/nessie-nginx.localhost.localdomain+3.pem;
    ssl_certificate_key /etc/nginx/certs/nessie-nginx.localhost.localdomain+3-key.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # This example uses /nessie/ as the path-prefix. It is not mandatory to do this.
    # To use no prefix and route all requests to Nessie, set '/' as the 'location' and
    # remove the 'proxy_set_header X-Forwarded-Prefix' line.
    location /nessie/ {
      proxy_buffering off;
      # The X-Forwarded-* headers needed by Quarkus
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;
      # X-Forwarded-Prefix is needed when the ingress shall use prefixes. Must set
      # quarkus.http.proxy.enable-forwarded-prefix=true for Nessie/Quarkus in that case.
      proxy_set_header X-Forwarded-Prefix /nessie/;

      proxy_pass http://nessie:19120/;
    }
  }
}
