name: PR Build Check

on:
  pull_request:
    types: [labeled, unlabeled, opened, synchronize, reopened]
# NOTE: using paths-ignore here doesn't play well with "Require status checks to pass before merging"
# due to https://github.community/t/feature-request-conditional-required-checks/16761
#    paths-ignore:
#      - 'LICENSE'
#      - 'NOTICE'
#      - '**.md'
#      - '!site/**'
#      - '.github/dependabot.yml'
#      - '.github/workflows/release*.yml'
#      - '.github/workflows/check*.yml'
#      - '.idea/**'
#      - '.editorconfig'

jobs:
  java:
    name: Java/Maven
    runs-on: ubuntu-latest
    outputs:
      CI_WITH_JACKSON: ${{ steps.ci_options.outputs.CI_WITH_JACKSON }}

    steps:
    - name: Build/test options
      id: ci_options
      run: |
        echo ::set-output name=CI_WITH_NATIVE::$(jq 'any(.pull_request.labels[]; .name == "pr-native")' < $GITHUB_EVENT_PATH)
        echo ::set-output name=CI_WITH_JACKSON::$(jq 'any(.pull_request.labels[]; .name == "pr-jackson")' < $GITHUB_EVENT_PATH)
    - name: Memory report
      run: |
        echo "Memory and swap:"
        free
        echo
        swapon --show
        echo
        echo "Available storage:"
        df -h
        echo
    - name: Add 6G more swap for native-image build
      if: ${{ steps.ci_options.outputs.CI_WITH_NATIVE == 'true' }}
      run: |
        sudo dd if=/dev/zero of=/mnt/swapfile-2 bs=1MiB count=$((6*1024))
        sudo mkswap /mnt/swapfile-2
        sudo swapon /mnt/swapfile-2
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Update /etc/hosts
      run: echo -e "$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts
    - name: Set up Maven toolchains.xml
      run: |
          cat << 'EOT' > ${HOME}/.m2/toolchains.xml
          <?xml version="1.0" encoding="UTF8"?>
          <toolchains>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>11</version>
                <vendor>zulu</vendor>
              </provides>
              <configuration>
                <jdkHome>${env.JAVA_HOME}</jdkHome>
              </configuration>
            </toolchain>
          </toolchains>
          EOT

    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/org/projectnessie
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Cache local NPM repository
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Build with Maven
      env:
        SPARK_LOCAL_IP: localhost
      run: |
        ./mvnw -B install javadoc:javadoc-no-fork --file pom.xml -Pcode-coverage -Dtest.log.level=WARN
    - name: Build with Maven / Native tests
      if: ${{ steps.ci_options.outputs.CI_WITH_NATIVE == 'true' }}
      run: |
        # No code-coverage here
        ./mvnw -B install javadoc:javadoc-no-fork --file pom.xml -Pnative -Dtest.log.level=WARN -pl :nessie-quarkus -pl :nessie-lambda
    - name: Build with Gradle
      run: ./gradlew --rerun-tasks --no-daemon --info build
      working-directory: ./tools/apprunner-gradle-plugin
    - name: Capture test results
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: test-results
        path: |
          **/target/surefire-reports/*
          **/target/failsafe-reports/*
          **/build/reports/*
          **/build/test-results/*
    - name: Capture Gatling simulation logs
      uses: actions/upload-artifact@v2
      with:
        name: gatling-logs
        path: perftest/simulations/target/gatling/*/simulation.log
    - uses: codecov/codecov-action@v1
      with:
        flags: java
        files: |
          code-coverage/target/site/jacoco-aggregate-all/jacoco.xml

  jackson-tests:
    name: Jackson Integration Tests
    needs: java
    if: ${{ needs.java.outputs.CI_WITH_JACKSON == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      # note the big include entry in matrix is used to ensure we get human readable names for the jobs
      matrix:
        include:
          - jackson-version: 2.6.7
            target-library: Spark 2.4.4
            java-version: 11
          - jackson-version: 2.10.0
            target-library: Spark 3.0.1
            java-version: 11
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/projectnessie
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Jackson Integration Tests ${{ matrix.target-library }}
        run: mvn verify -pl :nessie-client -am -Pjackson-tests -Djackson.test.version=${{ matrix.jackson-version }} -Dtest.log.level=WARN

  python:
    name: Python
    runs-on: ubuntu-latest
    env:
      working-directory: ./python
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
      working-directory: ${{env.working-directory}}
    - name: Test with tox
      run: tox
      working-directory: ${{env.working-directory}}
    - uses: codecov/codecov-action@v1
      with:
        flags: python

  site:
    name: Build Website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Upgrade pip
        run: |
          # install pip=>20.1 to use "pip cache dir"
          python3 -m pip install --upgrade pip
      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('site/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: python3 -m pip install -r ./site/requirements.txt
      - name: Generate Static Site
        run: mkdocs build
        working-directory: ./site

  lint-helm:
    name: Lint Helm chart
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Lint Helm
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm lint ./helm/nessie/
