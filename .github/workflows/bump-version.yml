# Copyright (C) 2020 Dremio
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Projectnessie Update development version on 'main'

# Manually triggered workflow, takes the "next-version" argument.
# This workflow creates the git commit to bump the development version.

# Secrets:
#   NESSIE_BUILDER  GH access-token to push the release-commits+tag to the branch,
#                   bypassing the required commit-hooks + review.

name: Bump version

on:
  # Manually triggered
  workflow_dispatch:
    inputs:
      nextVersion:
        description: 'The new version - e.g. `0.5.0`'
        required: true

jobs:
  create-release:
    name: Bump version
    runs-on: ubuntu-latest
    env:
      NEXT_VERSION: ${{ github.event.inputs.nextVersion }}

    steps:

    # Check the given version parameter strings for valid version patterns and inequality.
    - name: Check parameters
      run: |
        # check if tag matches patterns like nessie-0.5, nessie-0.10.4.3-alpha1, etc
        if [[ ${NEXT_VERSION} =~ ^[0-9]+[.][0-9.]*[0-9](-[a-zA-Z0-9]+)?$ ]]; then
          echo "Parameter check OK"
        else
          echo "NEXT_VERSION is not a valid release version."
          exit 1
        fi

    ### BEGIN runner setup
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Python
      uses: ./.github/actions/dev-tool-python
      with:
        python-version: '3.8'
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bump2version
        # Remove the following, once https://github.com/c4urself/bump2version/issues/30 is fixed
        # and the two workarounds below are removed.
        pip install -r python/requirements.txt
    ### END runner setup

    - name: Bump Python version ${{ github.event.inputs.releaseVersion }}
      working-directory: ./python
      run: |
        # bump2version 1.0.1 has a bug: https://github.com/c4urself/bump2version/issues/30
        if [[ "$(cd python/ ; python -c 'import pynessie; print(pynessie.__version__)')" != ${NEXT_VERSION} ]] ; then
          bump2version --no-commit --no-tag --new-version ${NEXT_VERSION} minor
          # Call into pynessie to ensure bump2version didn't mess up anything
          echo "pynessie at release-version $(python -c 'import pynessie; print(pynessie.__version__)')"
        else
          echo "pynessie already at release-version ${NEXT_VERSION}"
        fi

    # Update ui-version to next development iteration
    - name: Bump UI to next development version
      working-directory: ./ui
      env:
        NEXT_UI_VERSION: ${{ env.NEXT_VERSION }}-snapshot
      run: |
        cp package.json /tmp/nessie-ui-package.json
        cp package-lock.json /tmp/nessie-ui-package-lock.json
        cat /tmp/nessie-ui-package.json | jq ".version = \"${NEXT_UI_VERSION}\"" > package.json
        cat /tmp/nessie-ui-package-lock.json | jq ".version = \"${NEXT_UI_VERSION}\" | .packages[\"\"].version = \"${NEXT_UI_VERSION}\"" > package-lock.json

    # Update versions in version.txt to next development iteration
    - name: Bump to next development version version
      run: echo "${NEXT_VERSION}-SNAPSHOT" > version.txt

    - name: Configure bump-version-bot-user in git config
      run: |
        git config --global user.email "nessie-bump-version-workflow-noreply@projectnessie.org"
        git config --global user.name "Nessie Bump Version Workflow [bot]"

    # Record the next development iteration in git
    - name: Record next development version in git
      run: git commit -a -m "[bump-version] bump to ${NEXT_VERSION}-SNAPSHOT"

    # Record the next development iteration in git
    - name: Show Git log
      run: git log -n2

    # Push the 2 git commits and git tag. If this one fails, some other commit was pushed to the
    # 'main' branch and break the linear history for the Nessie git repo.
    # The `release-publish.yml` job will run when the release tag `nessie-x.y.z` has been pushed.
    - name: Push
      run: |
        # Push directly using the remote repo URL, which includes the secret so this job can push to the repo
        UPSTREAM="https://${{ secrets.NESSIE_BUILDER }}@github.com/${GITHUB_REPOSITORY}.git"

        # Move the default auth settings in ~/.gitconfig out of the way, so the git-push can use the token
        git config --rename-section http.https://github.com/ http.https://save.github.com/

        git push --no-verify "${UPSTREAM}" HEAD:${GITHUB_REF} ${GIT_TAG}

        # Move the default auth settings in ~/.gitconfig back
        git config --rename-section http.https://save.github.com/ http.https://github.com/
