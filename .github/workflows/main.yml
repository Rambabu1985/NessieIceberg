name: Main CI

on:
  push:
    branches: [ main ]

jobs:
  java:
    name: Java/Maven
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/com/nessie
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Cache local NPM repository
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Build with Maven
      run: mvn -B deploy --file pom.xml -Pcode-coverage,native,release -DdeployAtEnd=true
      env:
        GITHUB_TOKEN: ${{ github.token }} 
    - name: Push Docker images
      run: |
          echo '${{ secrets.GITHUB_TOKEN }}' | docker login https://docker.pkg.github.com -u '${{ github.actor }}' --password-stdin
          docker images --filter 'reference=projectnessie/nessie' --format '{{.ID}}\t{{.Tag}}' |
          while read IMAGE_ID IMAGE_TAG; do
            docker tag "$IMAGE_ID" "docker.pkg.github.com/${{ github.repository }}/nessie:${IMAGE_TAG}"
            docker push "docker.pkg.github.com/${{ github.repository }}/nessie:${IMAGE_TAG}"
          done
    - name: Capture test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: |
          **/target/surefire-reports/*
          **/target/failsafe-reports/*
    - uses: codecov/codecov-action@v1
      with:
        flags: java

  python:
    name: Python
    runs-on: ubuntu-latest
    env:
      working-directory: ./python
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
      working-directory: ${{env.working-directory}}
    - name: Test with tox
      run: tox
      working-directory: ${{env.working-directory}}

  site:
    name: Build & Deploy Website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Upgrade pip
        run: |
          # install pip=>20.1 to use "pip cache dir"
          python3 -m pip install --upgrade pip
      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('site/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: python3 -m pip install -r ./site/requirements.txt
      - name: Generate Static Site
        run: mkdocs build
        working-directory: ./site
      - name: Deploy Static Site to GitHub
        uses: peaceiris/actions-gh-pages@v3
        with:
          external_repository: projectnessie/projectnessie.github.io
          publish_branch: main
          deploy_key: ${{ secrets.NESSIE_SITE_DEPLOY_KEY }}
          publish_dir: ./site   
          cname: projectnessie.org
