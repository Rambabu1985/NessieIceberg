# Copyright (C) 2020 Dremio
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Main CI

on:
  push:
    branches: [ main ]

jobs:
  java:
    name: Java/Maven
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'projectnessie/nessie' }}

    steps:

    ### BEGIN runner setup
    # workaround to fix the reverse-DNS issue on GitHub Ubuntu runners, see https://lists.apache.org/thread.html/r40b2da182952f21a3b94696e6f1bf8594e7ff16e1c5979fe8b2d51c8%40%3Cbuilds.apache.org%3E
    - name: Update /etc/hosts
      run: echo -e "$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Set up JDK 8
      uses: AdoptOpenJDK/install-jdk@v1
      with:
        version: '8'
        targets: 'JDK8_HOME'
    - name: Set up Maven toolchains.xml
      run: cp .github/maven/toolchains.xml ${HOME}/.m2/toolchains.xml
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/org/projectnessie
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Cache local NPM repository
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Cache local Gradle cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    ### END runner setup

    - name: Build with Maven
      run: mvn -B install --file pom.xml -Pcode-coverage,jdk8-tests,native,docker -Dtest.log.level=WARN
      env:
        SPARK_LOCAL_IP: localhost

    - name: Capture test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: |
          **/target/surefire-reports/*
          **/target/failsafe-reports/*

    - uses: codecov/codecov-action@v1
      with:
        flags: java

    - name: Build with Gradle
      run: ./gradlew build
      working-directory: ./tools/apprunner-gradle-plugin

  jackson-tests:
    name: Jackson Integration Tests
    needs: java
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      # note the big include entry in matrix is used to ensure we get human readable names for the jobs
      matrix:
        include:
          - jackson-version: 2.6.5
            target-library: Hive 2.3.7
            java-version: 11
          - jackson-version: 2.9.5
            target-library: Hive 3.1.2
            java-version: 11
          - jackson-version: 2.6.7
            target-library: Spark 2.4.4
            java-version: 11
          - jackson-version: 2.10.0
            target-library: Spark 3.0.1
            java-version: 11
    steps:

      ### BEGIN runner setup
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/projectnessie
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      ### END runner setup

      - name: Jackson Integration Tests ${{ matrix.target-library }}
        run: mvn verify -pl :nessie-client -am -Pjackson-tests -Djackson.test.version=${{ matrix.jackson-version }} -Dtest.log.level=WARN

  python:
    name: Python
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'projectnessie/nessie' }}
    env:
      working-directory: ./python
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:

    ### BEGIN runner setup
    - name: Checkout
      uses: actions/checkout@v2
    # Using Python 3.8
    # Might be worth to bump the version and/or make it configurable in the future
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache local pip repository
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    ### END runner setup

    - name: Test with tox
      run: tox
      working-directory: ${{env.working-directory}}

    - uses: codecov/codecov-action@v1
      with:
        flags: python
