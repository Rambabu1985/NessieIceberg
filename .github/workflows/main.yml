name: Main CI

on:
  push:
    branches:
      - main
      - release-*
    paths-ignore:
      - 'LICENSE'
      - 'NOTICE'
      - '**.md'
      - '!site/**'
      - '.github/renovate.json5'
      - '.github/workflows/release*.yml'
      - '.github/workflows/check*.yml'
      - '.idea/**'
      - '.editorconfig'

jobs:
  java:
    name: Java/Gradle
    runs-on: ubuntu-20.04
    env:
      SPARK_LOCAL_IP: localhost
      MAVEN_USERNAME: ${{ secrets.OSSRH_ACCESS_ID }}

    steps:
    - uses: actions/checkout@v3.3.0
    - name: Setup runner
      uses: ./.github/actions/setup-runner
    - name: Setup Java, Gradle
      uses: ./.github/actions/dev-tool-java
      with:
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}

    - name: Gradle / compile
      uses: gradle/gradle-build-action@v2
      with:
        arguments: spotlessCheck checkstyleMain checkstyleTest jar testClasses --scan

    - name: Gradle / unit test
      uses: gradle/gradle-build-action@v2
      with:
        arguments: test --scan

    - name: Gradle / check incl. integ-test
      uses: gradle/gradle-build-action@v2
      with:
        arguments: check codeCoverageReport -x test --scan

    - name: Gradle / Gatling simulations
      uses: gradle/gradle-build-action@v2
      with:
        arguments: gatlingRun

    - name: Gradle / assemble + publish local
      uses: gradle/gradle-build-action@v2
      with:
        arguments: |
          assemble
          publishToMavenLocal
          -Puber-jar
          --scan

    - name: Gradle / build tools integration tests
      uses: gradle/gradle-build-action@v2
      with:
        arguments: buildToolsIntegrationTest

    - name: Capture Test Reports
      uses: actions/upload-artifact@v3
      if: ${{ failure() }}
      with:
        name: test-results
        path: |
          **/build/reports/*
          **/build/test-results/*

    - name: Capture Results
      uses: ./.github/actions/ci-results

  native:
    name: Java/Gradle/Native
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3.3.0
      - name: Setup runner
        uses: ./.github/actions/setup-runner
        with:
          more-memory: 'true'
      - name: Setup Java, Gradle
        uses: ./.github/actions/dev-tool-java

      - name: Gradle / integration test native
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: true
          arguments: |
            --no-daemon
            :nessie-quarkus:quarkusBuild
            :nessie-quarkus:intTest
            -Pnative
            -Pdocker
            --scan

      - name: Capture Test Reports
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: test-results-native
          path: |
            **/build/reports/*
            **/build/test-results/*

  python:
    name: Python
    runs-on: ubuntu-20.04
    env:
      working-directory: ./python
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v3.3.0
    - name: Setup Python
      uses: ./.github/actions/dev-tool-python
      with:
        python-version: ${{ matrix.python-version }}
    - name: Test with tox
      run: tox
      working-directory: ${{env.working-directory}}
    - uses: codecov/codecov-action@v3
      if: github.repository_owner == 'projectnessie'
      continue-on-error: true
      with:
        verbose: true
        fail_ci_if_error: true
        flags: python

  helm-testing:
    name: Lint & Test Helm chart
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.8.1
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          ct list-changed --target-branch ${{ github.event.repository.default_branch }}

      - name: Run chart-testing (lint)
        run: ct lint --debug --charts ./helm/nessie

      - name: Set up & Start Minikube
        uses: medyagh/setup-minikube@v0.0.11
        with:
          cache: false

      - name: Show pods
        run: kubectl get pods -A

      - name: Run chart-testing (install)
        run: ct install --debug --charts ./helm/nessie
