plugins {
  id 'java-gradle-plugin'
  id 'maven-publish'
  id 'com.gradle.plugin-publish' version '0.12.0'
  id "com.diffplug.spotless" version "5.12.5"
}

def mavenPropertiesFile = file('../../target/project.properties')
if (!mavenPropertiesFile.exists() || mavenPropertiesFile.lastModified() < file("../../pom.xml").lastModified()) {
  exec {
    commandLine = ['../../mvnw', 'properties:write-project-properties', '-Pall-properties', '-q', '-f', '../../pom.xml']
    environment('JAVA_HOME', System.properties['java.home'])
  }.assertNormalExitValue()
}
def mavenProperties = new Properties()
mavenProperties.load(new StringReader(mavenPropertiesFile.text))

def quarkusVersion = mavenProperties.get('quarkus.version')
def jacksonVersion = mavenProperties.get('jackson.version')
def junitVersion = mavenProperties.get('junit.version')
version = mavenProperties.get('nessie.version')

allprojects {
  group = "org.projectnessie"
  version = version
  repositories {
    mavenCentral()
    mavenLocal()
  }
}

spotless {
  java {
    googleJavaFormat()
    licenseHeaderFile(file("../../codestyle/copyright-header-java.txt"))
  }
}

gradlePlugin {
  plugins {
    simplePlugin {
      id = 'org.projectnessie'
      implementationClass = 'org.projectnessie.quarkus.gradle.QuarkusAppPlugin'
      displayName = 'Quarkus App Runner'
      description = 'Start and stop a quarkus app as gradle tasks for integration testing'
    }
  }
}

repositories {
  mavenCentral()
  if (version.endsWith("-SNAPSHOT")) {
    mavenLocal()
  }
}

compileJava {
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

test {
  systemProperties([
          'quarkus-version': quarkusVersion,
          'nessie-version': version,
          'junit-version': junitVersion,
          'jackson-version': jacksonVersion
  ])
}

dependencies {
  implementation platform("io.quarkus:quarkus-bom:${quarkusVersion}")

  compile "io.quarkus:quarkus-bootstrap-core"
  compile "org.projectnessie:nessie-apprunner-maven-plugin:$version"
  compile "org.eclipse.microprofile.config:microprofile-config-api"

  testCompile gradleTestKit()
  testCompile("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testCompile("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

pluginBundle {
  website = 'https://projectnessie.org'
  vcsUrl = 'https://github.com/projectnessie/nessie'
  tags = ['test', 'integration', 'quarkus']
}

publishing {
  publications {
    maven(MavenPublication) {
      groupId = 'org.projectnessie'
      artifactId = 'nessie-apprunner-gradle-plugin'
      version = version

      from components.java
    }
  }
}
