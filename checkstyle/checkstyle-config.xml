<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2020 Dremio

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE module PUBLIC
  "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
  "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--  Checkstyle configuration for Dremio HBase plugin -->

<module name="Checker">

  <module name="TreeWalker">

    <module name="NeedBraces"/>
    <module name="IllegalImport">
      <!-- For "org.apache.commons.lang.*" classes use the corresponding class from "org.apache.commons.lang3.*" -->
      <property name="illegalPkgs" value="com.google.hive12,com.beust.jcommander.internal,jersey.repackaged,org.apache.commons.lang,hive,oadd,org.kududb.client.shaded,org.jboss.netty,org.apache.curator.shaded,org.apache.htrace.fasterxml,twill"/>
    </module>

    <module name="AvoidStarImport">
      <property name="allowStaticMemberImports" value="true"/>
    </module>

    <module name="ImportOrder">
      <property name="groups" value="java,javax,org,com"/>
      <property name="ordered" value="true"/>
      <property name="separated" value="true"/>
      <property name="option" value="top"/>
      <property name="sortStaticImportsAlphabetically" value="true"/>
    </module>

    <module name="UnusedImports"/>
    <module name="RedundantImport"/>

    <!-- Checks for Javadoc comments. -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <module name="JavadocType">
      <property name="scope" value="public"/>
      <property name="allowMissingParamTags" value="true"/>
    </module>
    <module name="JavadocStyle">
      <property name="checkFirstSentence" value="false"/>
    </module>

    <!-- Checks for Naming Conventions. -->
    <!-- See http://checkstyle.sf.net/config_naming.html -->
    <module name="ConstantName">
      <property name="format"
                value="^logger|[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
    </module>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>
    <module name="MemberName"/>
    <module name="MethodName"/>
    <module name="RegexpSinglelineJava">
      <property name="format" value="[ ]$"/>
      <property name="message" value="Trailing whitespace"/>
    </module>

    <!-- Modifier Checks -->
    <!-- See http://checkstyle.sourceforge.net/config_modifier.html -->
    <module name="ModifierOrder"/>
    <!-- module name="RedundantModifier"/ -->

    <!-- Checks for blocks. You know, those {}'s -->
    <!-- See http://checkstyle.sf.net/config_blocks.html -->
    <module name="EmptyBlock"/>
    <!-- module name="LeftCurly"/ -->
    <module name="RightCurly"/>

    <!-- Checks for common coding problems -->
    <!-- See http://checkstyle.sf.net/config_coding.html -->
    <module name="EmptyStatement"/>
    <module name="EqualsAvoidNull"/>
    <module name="EqualsHashCode"/>
    <module name="HiddenField">
      <property name="tokens" value="VARIABLE_DEF"/>
    </module>
    <module name="IllegalInstantiation"/>
    <module name="IllegalType">
      <property name="tokens" value="PARAMETER_DEF, METHOD_DEF, VARIABLE_DEF"/>
    </module>
    <module name="InnerAssignment"/>
    <module name="MissingSwitchDefault"/>
    <module name="MissingOverride"/>
    <!--module name="RedundantThrows"/-->
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StringLiteralEquality"/>

    <!-- Checks for class design -->
    <!-- See http://checkstyle.sf.net/config_design.html -->
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>
    <module name="VisibilityModifier">
      <property name="ignoreAnnotationCanonicalNames" value="org.junit.Rule" />
      <property name="ignoreAnnotationCanonicalNames" value="org.junit.ClassRule" />
      <property name="ignoreAnnotationCanonicalNames" value="com.google.common.annotations.VisibleForTesting" />
      <property name="ignoreAnnotationCanonicalNames" value="io.protostuff.Tag" />
    </module>

    <!-- Miscellaneous other checks. -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="ArrayTypeStyle"/>
    <module name="TodoComment"/>
    <module name="UpperEll"/>

    <module name="SuppressWarningsHolder"/>

    <module name="SuppressionCommentFilter">
      <property name="offCommentFormat" value="CHECKSTYLE\:OFF ([\w\|]+)" />
      <property name="onCommentFormat" value="CHECKSTYLE\:ON ([\w\|*])" />
      <property name="checkFormat" value="$1"/>
    </module>
  </module>

  <!-- Checks whether files end with a new line. -->
  <module name="NewlineAtEndOfFile">
    <property name="lineSeparator" value="lf"/>
  </module>

  <!-- Maximum file line length -->
  <module name="FileLength">
    <property name="max" value="3000"/>
  </module>

  <!-- No TAB characters -->
  <module name="FileTabCharacter"/>

  <!-- No Windows newlines -->
  <module name="RegexpMultiline">
    <property name="format" value="\r"/>
    <property name="message" value="No windows newlines"/>
  </module>

  <module name="RegexpSingleline">
    <property name="format" value="\s+$"/>
  </module>

  <module name="SuppressWarningsFilter" />

  <module name="RegexpSingleline">
    <property name="format" value="\s+$"/>
    <property name="message" value="A line of code cannot contain any trailing whitespace"/>
  </module>

</module>
