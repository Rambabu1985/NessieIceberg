/*
 * Copyright (C) 2024 Dremio
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

SKIP : <WHITESPACE : (" " | "\r" | "\n" | "\t" )+ > #Whitespace;

// Note: tokens should be ordered by their length (see https://parsers.org/)

TOKEN #Command
  : <USE: "USE">
  | <DROP: "DROP">
  | <LIST: "LIST">
  | <SHOW: "SHOW">
  | <HELP: "HELP">
  | <EXIT: "EXIT">
  | <ALTER: "ALTER">
  | <MERGE: "MERGE">
  | <ASSIGN: "ASSIGN">
  | <CREATE: "CREATE">
  | <REVERT: "REVERT">
  | <CONNECT: "CONNECT">
  ;

TOKEN
  : <SEMICOLON: ";"> #Semicolon
  | <EQUAL: "="> #Equal
  ;

TOKEN #Keyword
  : <AT: "AT">
  | <IF: "IF">
  | <IN: "IN">
  | <OF: "OF">
  | <ON: "ON">
  | <TO: "TO">
  | <AND: "AND">
  | <DRY: "DRY">
  | <LOG: "LOG">
  | <NOT: "NOT">
  | <SET: "SET">
  | <FROM: "FROM">
  | <INTO: "INTO">
  | <VIEW: "VIEW">
  | <WITH: "WITH">
  | <ALLOW: "ALLOW">
  | <FORCE: "FORCE">
  | <LIMIT: "LIMIT">
  | <STATE: "STATE">
  | <TABLE: "TABLE">
  | <USING: "USING">
  | <COMMIT: "COMMIT">
  | <EXISTS: "EXISTS">
  | <FILTER: "FILTER">
  | <NORMAL: "NORMAL">
  | <REMOVE: "REMOVE">
  | <CONTENT: "CONTENT">
  | <DELETES: "DELETES">
  | <LICENSE: "LICENSE">
  | <BEHAVIOR: "BEHAVIOR">
  | <CONTENTS: "CONTENTS">
  | <STARTING: "STARTING">
  | <BEHAVIORS: "BEHAVIORS">
  | <NAMESPACE: "NAMESPACE">
  | <TIMESTAMP: "TIMESTAMP">
  | <REFERENCE: "REFERENCE">
  | <REFERENCES: "REFERENCES">
  | <CONTAINING: "CONTAINING">
  ;

TOKEN #Literal
  : <TRUE: 'true'> #BooleanLiteral
  | <FALSE: "false"> #BooleanLiteral
  | <#REGULAR_CHAR : ~["\u0000"-"\u001F",'"',"\\"]>
  | <STRING_LITERAL:
      (
        '"' (~["\"","\\","\n","\r"])* '"' |
        '`' (~["`","\n","\r"])* '`' |
        '\'' (~["`","\n","\r"])* '\''
      )
    > #StringLiteral
  | <IDENTIFIER: ["A"-"Z", "a"-"z", "0"-"9"] ( (["A"-"Z", "a"-"z", "0"-"9", "_", "-", ".", ":", "/"])* ["A"-"Z", "a"-"z", "0"-"9", "_", "-"])?> #Ident
  | <URI: "http" ("s")? "://" (["a"-"z", "A"-"Z", "0"-"9", ":", "/", "-", "_", ".", "?", "&", "=", "+"])+> #UriLiteral
  | <POSITIVE_INT: ["1"-"9"] (["0"-"9"])*> #PositiveIntLiteral
  ;

TOKEN #ReferenceTypes
  : <BRANCH: "BRANCH"> #Branch
  | <TAG: "TAG"> #Tag
  ;

UNPARSED : <SINGLE_LINE_DASH_COMMENT : "--" (~["\n"])* > #SingleLineDashComment ;
UNPARSED : <SINGLE_LINE_COMMENT : "//" (~["\n"])* > #SingleLineComment ;
UNPARSED : < ?MULTI_LINE_COMMENT : "/*" (~[])* "*/" > #MultiLineComment ;
